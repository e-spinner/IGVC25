
# MARK: BT Nvgt
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_bt_navigator
# https://docs.nav2.org/configuration/packages/configuring-bt-navigator.html
bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0

    default_nav_to_pose_bt_xml: src/igvc23/config/bt_clean.xml

    # https://docs.nav2.org/plugins/index.html#behavior-tree-navigators
    navigators: ["navigate_to_pose"]

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
      enable_groot_monitoring: false

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_bt_navigator/src/navigators/navigate_through_poses.cpp
    # navigate_through_poses:
    #   plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    #   enable_groot_monitoring: false

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code
      - spin_error_code
      - backup_error_code



# MARK: Ctrl Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_controller
# https://docs.nav2.org/configuration/packages/configuring-controller-server.html
controller_server:
  ros__parameters:
    controller_frequency: 20.0
    costmap_update_timeout: 0.30
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    # https://docs.nav2.org/plugins/index.html#progress-checkers
    progress_checker_plugins: ["progress_checker"]
    # current_progress_checker: progress_checker
    # https://docs.nav2.org/plugins/index.html#goal-checkers
    goal_checker_plugins: ["general_goal_checker"]
    # current_goal_checker: general_goal_checker
    # https://docs.nav2.org/plugins/index.html#controllers
    controller_plugins: ["dwb_controller"]
    use_realtime_priority: false

    # Progress checker parameters
    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_controller/plugins/simple_progress_checker.cpp
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Goal checker parameters
    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_controller/plugins/simple_goal_checker.cpp
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"

      # amount allowed away from goal
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    # DWB controller parameters
    dwb_controller:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 2.24
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 2.24
      min_speed_theta: 0.0
      acc_lim_x: 3.0
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -3.0
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 30
      vy_samples: 5
      vtheta_samples: 20

      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      limit_vel_cmd_in_traj: False
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 48.0 # 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

    # https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_mppi_controller
    mppi_controller:
      plugin: "nav2_mppi_controller::MPPIController"
      motion_model: 'DiffDrive'

      critics: [
         "ConstraintCritic", "CostCritic", "GoalCritic",
         "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic",
         "PathAngleCritic", "PreferForwardCritic"]
      iteration_count: 1

      batch_size: 2000
      time_steps: 56
      model_dt: 0.05

      # These do not seem to be real
      # ax_max: 4.0
      # ax_min: -4.0
      # ay_max: 3.0
      # az_max: 0.0

      # sampling standard deviation
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.4

      # max speeds
      vx_max: 20.2    # 5mph forward
      vx_min: -0.5   # backup
      vy_max: 0.0    # cannot drive sideways
      wz_max: 2.5    # rad/s
      temperature: 0.3
      gamma: 0.1
      visualize: true # only for debugging
      retry_attempt_limit: 1
      regenerate_noises: true

      TrajectoryVisualizer:
         trajectory_step: 5
         time_step: 3

      PathHandler:
         prune_distance: 1.7
         transform_tolerance: 0.1

      # AckermannConstraints:
       #   min_turning_r: 0.2

      ConstraintCritic:
         enabled: true
         cost_power: 1
         cost_weight: 4.0

      GoalCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         threshold_to_consider: 1.4

      GoalAngleCritic:
         enabled: true
         cost_power: 1
         cost_weight: 3.0
         threshold_to_consider: 0.5

      PreferForwardCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         threshold_to_consider: 0.5

      CostCritic:
         enabled: true
         cost_power: 1
         cost_weight: 3.81
         near_collision_cost: 253
         critical_cost: 300.0
         consider_footprint: false
         collision_cost: 1000000.0
         near_goal_distance: 1.0
         trajectory_point_step: 2

      PathAlignCritic:
         enabled: true
         cost_power: 1
         cost_weight: 14.0
         max_path_occupancy_ratio: 0.05
         trajectory_point_step: 4
         threshold_to_consider: 0.5
         offset_from_furthest: 20
         use_path_orientations: false

      PathFollowCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         offset_from_furthest: 5
         threshold_to_consider: 1.4

      PathAngleCritic:
         enabled: true
         cost_power: 1
         cost_weight: 2.0
         offset_from_furthest: 4
         threshold_to_consider: 0.5
         max_angle_to_furthest: 1.0
         mode: 0

      # TwirlingCritic:
      #   enabled: true
      #   twirling_cost_power: 1
      #   twirling_cost_weight: 10.0


# MARK: Smtr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_smoother
# https://docs.nav2.org/configuration/packages/configuring-smoother-server.html
smoother_server:
  ros__parameters:
    # https://docs.nav2.org/plugins/index.html#smoothers
    smoother_plugins: ["simple_smoother", "curvature_smoother"]

    # https://github.com/ros-navigation/navigation2/tree/main/nav2_smoother
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_smoother/src/savitzky_golay_smoother.cpp
    curvature_smoother:
      plugin: "nav2_smoother::SavitzkyGolaySmoother"


# MARK: Plnr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_planner
# https://docs.nav2.org/configuration/packages/configuring-planner-server.html
planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    # https://docs.nav2.org/plugins/index.html#planners
    planner_plugins: ["grid_based"]
    costmap_update_timeout: 1.0

    # https://docs.nav2.org/configuration/packages/configuring-navfn.html
    # https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_navfn_planner
    grid_based:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: True

# MARK: Bhvr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_behaviors
# https://docs.nav2.org/configuration/packages/configuring-behavior-server.html
behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint

    cycle_frequency: 10.0
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link

    transform_tolerance: 0.1
    simulate_ahead_time: 2.0

    max_rotational_vel: 2.5
    min_rotational_vel: 0.5
    rotational_acc_lim: 3.2

    # https://docs.nav2.org/plugins/index.html#behaviors
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/spin.cpp
    spin:
      plugin: "nav2_behaviors::Spin"

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/back_up.cpp
    backup:
      plugin: "nav2_behaviors::BackUp"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/drive_on_heading.cpp
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/wait.cpp
    wait:
      plugin: "nav2_behaviors::Wait"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/assisted_teleop.cpp
   # assisted_teleop:
   #   plugin: "nav2_behaviors::AssistedTeleop"


# MARK: Lcl Cstmp
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_costmap_2d
# https://docs.nav2.org/configuration/packages/configuring-costmaps.html#
# meant for short term planning / obstacle avoidance
# takes in live scan data to see what is nearby, including moving obstacles
local_costmap:
  local_costmap:
    ros__parameters:
      always_send_full_costmap: True

      footprint: "[ [0.3078, 0.4102], [0.3078, -0.4102], [-0.7766, -0.4102], [-0.7766, 0.4102] ]"
      footprint_padding: 0.01

      global_frame: odom

      width: 5
      height: 5
      rolling_window: true
      resolution: 0.05
      update_frequency: 10.0
      publish_frequency: 5.0

      robot_base_frame: base_link

      map_vis_z: 0.1

      # https://docs.nav2.org/plugins/index.html#costmap-layers
      plugins: ["obstacle_layer", "inflation_layer"]

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/obstacle_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/obstacle.html
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.0

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/inflation_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/inflation.html
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 1.0

      # static_layer:
      #   plugin: "nav2_costmap_2d::StaticLayer"
      #   map_subscribe_transient_local: True


# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_costmap_2d
# https://docs.nav2.org/configuration/packages/configuring-costmaps.html#
# MARK: Gbl Cstmp
# meant for long term planning, keeps track of overall situation
global_costmap:
  global_costmap:
    ros__parameters:
      always_send_full_costmap: True

      footprint: "[ [0.3078, 0.4102], [0.3078, -0.4102], [-0.7766, -0.4102], [-0.7766, 0.4102] ]"
      footprint_padding: 0.01

      global_frame: map

      width: 30
      height: 30
      rolling_window: true
      resolution: 0.1
      update_frequency: 1.0
      publish_frequency: 1.0
      track_unknown_space: true

      robot_base_frame: base_link

      map_vis_z: -0.1

      # https://docs.nav2.org/plugins/index.html#costmap-layers
      plugins: ["obstacle_layer", "inflation_layer"]

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/static_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/static.html
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        footprint_clearing_enabled: True

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/obstacle_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/obstacle.html
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 30.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          inf_is_valid: true   # fixes [#3]!!! yay

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/inflation_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/inflation.html
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 1.0


# MARK: Clsn Mntr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_collision_monitor
# https://docs.nav2.org/configuration/packages/configuring-collision-monitor.html
collision_monitor:
  ros__parameters:

    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    transform_tolerance: 0.5
    source_timeout: 5.0
    stop_pub_timeout: 2.0

    enable_stamped_cmd_vel: False # False for Jazzy or older by default

    polygons: ["polygon_slow", "polygon_slow"]

    polygon_stop:
      type: "polygon"
      points: "[[0.35, 0.45], [0.35, -0.45], [-0.75, -0.3], [-0.75, 0.3]]"
      action_type: "stop"
      min_points: 4  # max_points: 3 for Humble
      visualize: True
      polygon_pub_topic: "polygon_stop"

    polygon_slow:
      type: "polygon"
      points: "[[0.4, 0.45], [0.4, -0.45], [-0.8, -0.3], [-0.8, 0.3]]"
      action_type: "slowdown"
      min_points: 4  # max_points: 3 for Humble
      slowdown_ratio: 0.3
      visualize: True
      polygon_pub_topic: "polygon_slowdown"

    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"


# MARK: Vel Smtr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_velocity_smoother
# https://docs.nav2.org/configuration/packages/configuring-velocity-smoother.html
velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"

    max_velocity: [2.2, 0.0, 2.5]
    min_velocity: [-0.5, 0.0, -2.0]
    deadband_velocity: [0.0, 0.0, 0.0]

    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1

    velocity_timeout: 1.0

    enable_stamped_cmd_vel: False # twist stamper does this


# MARK: Wpnt Flwr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_waypoint_follower
# https://docs.nav2.org/configuration/packages/configuring-waypoint-follower.html
waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false

    # https://docs.nav2.org/plugins/index.html#waypoint-task-executors
    waypoint_task_executor_plugin: "wait_at_waypoint"
    service_introspection_mode: "disabled"

    # https://github.com/ros-navigation/navigation2/blob/main/nav2_waypoint_follower/plugins/wait_at_waypoint.cpp
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0