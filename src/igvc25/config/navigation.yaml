
# MARK: BT Nvgt
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_bt_navigator
# https://docs.nav2.org/configuration/packages/configuring-bt-navigator.html
bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0

    default_nav_to_pose_bt_xml: src/igvc25/behavior/bt_clean.xml

    # https://docs.nav2.org/plugins/index.html#behavior-tree-navigators
    navigators: ["navigate_to_pose"]

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
      enable_groot_monitoring: false

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_bt_navigator/src/navigators/navigate_through_poses.cpp
    # navigate_through_poses:
    #   plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    #   enable_groot_monitoring: false

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code
      - spin_error_code
      - backup_error_code



# MARK: Ctrl Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_controller
# https://docs.nav2.org/configuration/packages/configuring-controller-server.html
controller_server:
  ros__parameters:
    controller_frequency: 20.0
    costmap_update_timeout: 0.30
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    # https://docs.nav2.org/plugins/index.html#progress-checkers
    progress_checker_plugins: ["progress_checker"]
    # current_progress_checker: progress_checker
    # https://docs.nav2.org/plugins/index.html#goal-checkers
    goal_checker_plugins: ["general_goal_checker"]
    # current_goal_checker: general_goal_checker
    # https://docs.nav2.org/plugins/index.html#controllers
    controller_plugins: ["mppi_controller"]
    use_realtime_priority: false

    # Progress checker parameters
    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_controller/plugins/simple_progress_checker.cpp
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Goal checker parameters
    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_controller/plugins/simple_goal_checker.cpp
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"

      # amount allowed away from goal
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25


    # https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_mppi_controller
    mppi_controller:
      plugin: "nav2_mppi_controller::MPPIController"
      motion_model: 'Ackermann'

      critics: [
         "ConstraintCritic", "CostCritic", "GoalCritic",
         "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic",
         "PathAngleCritic", "PreferForwardCritic"]
      iteration_count: 1

      batch_size: 2000
      time_steps: 56
      model_dt: 0.05

      # These do not seem to be real
      # ax_max: 4.0
      # ax_min: -4.0
      # ay_max: 3.0
      # az_max: 0.0

      # sampling standard deviation
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.4

      # max speeds
      vx_max: 2.3    # 5mph forward
      vx_min: -0.5   # backup
      vy_max: 0.0    # cannot drive sideways
      wz_max: 1.57    # rad/s
      temperature: 0.3
      gamma: 0.1
      visualize: true # only for debugging
      retry_attempt_limit: 1
      regenerate_noises: true

      TrajectoryVisualizer:
         trajectory_step: 5
         time_step: 3

      PathHandler:
         prune_distance: 1.7
         transform_tolerance: 0.1

      # MARK: ACK RAD
      AckermannConstraints:
         min_turning_r: 1.11

      ConstraintCritic:
         enabled: true
         cost_power: 1
         cost_weight: 4.0

      GoalCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         threshold_to_consider: 1.4

      GoalAngleCritic:
         enabled: true
         cost_power: 1
         cost_weight: 3.0
         threshold_to_consider: 0.5

      PreferForwardCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         threshold_to_consider: 0.5

      CostCritic:
         enabled: true
         cost_power: 1
         cost_weight: 3.81
         near_collision_cost: 253
         critical_cost: 300.0
         consider_footprint: false
         collision_cost: 1000000.0
         near_goal_distance: 1.0
         trajectory_point_step: 2

      PathAlignCritic:
         enabled: true
         cost_power: 1
         cost_weight: 14.0
         max_path_occupancy_ratio: 0.05
         trajectory_point_step: 4
         threshold_to_consider: 0.5
         offset_from_furthest: 20
         use_path_orientations: false

      PathFollowCritic:
         enabled: true
         cost_power: 1
         cost_weight: 5.0
         offset_from_furthest: 5
         threshold_to_consider: 1.4

      PathAngleCritic:
         enabled: true
         cost_power: 1
         cost_weight: 2.0
         offset_from_furthest: 4
         threshold_to_consider: 0.5
         max_angle_to_furthest: 1.0
         mode: 0

      # TwirlingCritic:
      #   enabled: true
      #   twirling_cost_power: 1
      #   twirling_cost_weight: 10.0


# MARK: Smtr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_smoother
# https://docs.nav2.org/configuration/packages/configuring-smoother-server.html
smoother_server:
  ros__parameters:
    # https://docs.nav2.org/plugins/index.html#smoothers
    smoother_plugins: ["simple_smoother", "curvature_smoother"]

    # https://github.com/ros-navigation/navigation2/tree/main/nav2_smoother
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_smoother/src/savitzky_golay_smoother.cpp
    curvature_smoother:
      plugin: "nav2_smoother::SavitzkyGolaySmoother"


# MARK: Plnr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_planner
# https://docs.nav2.org/configuration/packages/configuring-planner-server.html
planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    # https://docs.nav2.org/plugins/index.html#planners
    planner_plugins: ["grid_based"]
    costmap_update_timeout: 1.0

    # https://docs.nav2.org/configuration/packages/configuring-smac-planner.html
    # https://github.com/ros-navigation/navigation2/tree/humble/nav2_smac_planner
    GridBased:
        plugin: "nav2_smac_planner/SmacPlannerHybrid"
        tolerance: 0.5                      # tolerance for planning if unable to reach exact pose, in meters
        downsample_costmap: false           # whether or not to downsample the map
        downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
        allow_unknown: true      # [false]  # allow traveling in unknown space
        max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
        max_on_approach_iterations: 1000    # maximum number of iterations to attempt to reach goal once in tolerance
        max_planning_time: 3.5              # max time in s for planner to plan, smooth, and upsample. Will scale maximum smoothing and upsampling times based on remaining time after planning.
        motion_model_for_search: "DUBIN"    # For Hybrid Dubin, Redds-Shepp
        cost_travel_multiplier: 2.0         # For 2D: Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
        angle_quantization_bins: 64         # For Hybrid nodes: Number of angle bins for search, must be 1 for 2D node (no angle search)
        analytic_expansion_ratio: 3.5       # For Hybrid/Lattice nodes: The ratio to attempt analytic expansions during search for final approach.
        analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting (in meters). This should be scaled with minimum turning radius and be no less than 4-5x the minimum radius
        # MARK: ACK RAD
        minimum_turning_radius: 1.11        # For Hybrid/Lattice nodes: minimum turning radius in m of path / vehicle
        reverse_penalty: 2.1                # For Reeds-Shepp model: penalty to apply if motion is reversing, must be => 1
        change_penalty: 0.0                 # For Hybrid nodes: penalty to apply if motion is changing directions, must be >= 0
        non_straight_penalty: 1.20          # For Hybrid nodes: penalty to apply if motion is non-straight, must be => 1
        cost_penalty: 2.0                   # For Hybrid nodes: penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
        retrospective_penalty: 0.025        # For Hybrid/Lattice nodes: penalty to prefer later maneuvers before earlier along the path. Saves search time since earlier nodes are not expanded until it is necessary. Must be >= 0.0 and <= 1.0
        rotation_penalty: 5.0               # For Lattice node: Penalty to apply only to pure rotate in place commands when using minimum control sets containing rotate in place primitives. This should always be set sufficiently high to weight against this action unless strictly necessary for obstacle avoidance or there may be frequent discontinuities in the plan where it requests the robot to rotate in place to short-cut an otherwise smooth path for marginal path distance savings.
        lookup_table_size: 20.0             # For Hybrid nodes: Size of the dubin/reeds-sheep distance window to cache, in meters.
        cache_obstacle_heuristic: True      # For Hybrid nodes: Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
        allow_reverse_expansion: False      # For Lattice nodes: Whether to expand state lattice graph in forward primitives or reverse as well, will double the branching factor at each step.
        smooth_path: True                   # For Lattice/Hybrid nodes: Whether or not to smooth the path, always true for 2D nodes.
        smoother:
          max_iterations: 1000
          w_smooth: 0.3
          w_data: 0.2
          tolerance: 1.0e-10
          do_refinement: true               # Whether to recursively run the smoother 3 times on the results from prior runs to refine the results further

# MARK: Bhvr Svr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_behaviors
# https://docs.nav2.org/configuration/packages/configuring-behavior-server.html
behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint

    cycle_frequency: 10.0
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link

    transform_tolerance: 0.1
    simulate_ahead_time: 2.0

    max_rotational_vel: 1.57
    min_rotational_vel: 0.5
    rotational_acc_lim: 3.2

    # https://docs.nav2.org/plugins/index.html#behaviors
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/spin.cpp
    spin:
      plugin: "nav2_behaviors::Spin"

    # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/back_up.cpp
    backup:
      plugin: "nav2_behaviors::BackUp"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/drive_on_heading.cpp
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/wait.cpp
    wait:
      plugin: "nav2_behaviors::Wait"

   # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_behaviors/plugins/assisted_teleop.cpp
   # assisted_teleop:
   #   plugin: "nav2_behaviors::AssistedTeleop"


# MARK: Lcl Cstmp
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_costmap_2d
# https://docs.nav2.org/configuration/packages/configuring-costmaps.html#
# meant for short term planning / obstacle avoidance
# takes in live scan data to see what is nearby, including moving obstacles
local_costmap:
  local_costmap:
    ros__parameters:
      always_send_full_costmap: True

      footprint: "[ [0.3078, 0.4102], [0.3078, -0.4102], [-0.7766, -0.4102], [-0.7766, 0.4102] ]"
      footprint_padding: 0.01

      global_frame: odom

      width: 5
      height: 5
      rolling_window: true
      resolution: 0.05
      update_frequency: 10.0
      publish_frequency: 5.0

      robot_base_frame: base_link

      map_vis_z: 0.1

      # https://docs.nav2.org/plugins/index.html#costmap-layers
      plugins: ["obstacle_layer", "inflation_layer"]

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/obstacle_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/obstacle.html
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0
          obstacle_min_range: 0.0

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/inflation_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/inflation.html
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 1.0

      # static_layer:
      #   plugin: "nav2_costmap_2d::StaticLayer"
      #   map_subscribe_transient_local: True


# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_costmap_2d
# https://docs.nav2.org/configuration/packages/configuring-costmaps.html#
# MARK: Gbl Cstmp
# meant for long term planning, keeps track of overall situation
global_costmap:
  global_costmap:
    ros__parameters:
      always_send_full_costmap: True

      footprint: "[ [0.3078, 0.4102], [0.3078, -0.4102], [-0.7766, -0.4102], [-0.7766, 0.4102] ]"
      footprint_padding: 0.01

      global_frame: map

      width: 30
      height: 30
      rolling_window: true
      resolution: 0.1
      update_frequency: 1.0
      publish_frequency: 1.0
      track_unknown_space: true

      robot_base_frame: base_link

      map_vis_z: -0.1

      # https://docs.nav2.org/plugins/index.html#costmap-layers
      plugins: ["obstacle_layer", "inflation_layer"]

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/static_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/static.html
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        footprint_clearing_enabled: True

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/obstacle_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/obstacle.html
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 30.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          inf_is_valid: true   # fixes [#3]!!! yay

      # https://github.com/ros-navigation/navigation2/blob/jazzy/nav2_costmap_2d/plugins/inflation_layer.cpp
      # https://docs.nav2.org/configuration/packages/costmap-plugins/inflation.html
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 1.0


# MARK: Clsn Mntr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_collision_monitor
# https://docs.nav2.org/configuration/packages/configuring-collision-monitor.html
collision_monitor:
  ros__parameters:

    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    transform_tolerance: 0.5
    source_timeout: 5.0
    stop_pub_timeout: 2.0

    enable_stamped_cmd_vel: False # False for Jazzy or older by default

    polygons: ["polygon_slow", "polygon_slow"]

    polygon_stop:
      type: "polygon"
      points: "[[0.35, 0.45], [0.35, -0.45], [-0.75, -0.3], [-0.75, 0.3]]"
      action_type: "stop"
      min_points: 4  # max_points: 3 for Humble
      visualize: True
      polygon_pub_topic: "polygon_stop"

    polygon_slow:
      type: "polygon"
      points: "[[0.4, 0.45], [0.4, -0.45], [-0.8, -0.3], [-0.8, 0.3]]"
      action_type: "slowdown"
      min_points: 4  # max_points: 3 for Humble
      slowdown_ratio: 0.3
      visualize: True
      polygon_pub_topic: "polygon_slowdown"

    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"


# MARK: Vel Smtr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_velocity_smoother
# https://docs.nav2.org/configuration/packages/configuring-velocity-smoother.html
velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"

    max_velocity: [2.2, 0.0, 2.5]
    min_velocity: [-0.5, 0.0, -2.0]
    deadband_velocity: [0.0, 0.0, 0.0]

    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1

    velocity_timeout: 1.0

    enable_stamped_cmd_vel: True # no longer using twist stamper


# MARK: Wpnt Flwr
# https://github.com/ros-navigation/navigation2/tree/jazzy/nav2_waypoint_follower
# https://docs.nav2.org/configuration/packages/configuring-waypoint-follower.html
waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false

    # https://docs.nav2.org/plugins/index.html#waypoint-task-executors
    waypoint_task_executor_plugin: "wait_at_waypoint"
    service_introspection_mode: "disabled"

    # https://github.com/ros-navigation/navigation2/blob/main/nav2_waypoint_follower/plugins/wait_at_waypoint.cpp
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0